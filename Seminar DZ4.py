# Формат: Объясняет преподаватель
# Задача: предложить улучшения кода для уже решённых задач:
# С помощью использования **лямбд, filter, map, zip, enumerate, list comprehension
# В этом случае можно пропустить совсем тривиальные (т.е. задачу 1 или 2 тут точно решать не имеет смысла) - исходите из уровня группы и студента.

# Дана последовательность чисел. Получить отсортированный по возрастанию
# список уникальных элементов заданной последовательности.

def sort_lst(lst: list) -> list:
    """ возвращаем отсортированные уникальные значения """
    uniq_elements = set()
    for el in lst:
        if el not in uniq_elements:
            uniq_elements.add(el)
        else:
            uniq_elements.discard(el)

    s = list(uniq_elements)
    s.sort()
    return s


if __name__ == "__main__":
    lst = [1, 2, 3, 5, 1, 5, 3, 10]
    print(sort_lst(lst))  # [2, 10]